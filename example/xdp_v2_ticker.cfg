eth1=0.0.0.0
eth2=0.0.0.0

;; for clarity, you can use a fake IP address for
;; receive_point_reader.  Comment the ones above
;;
;; eth1=1.2.2.10
;; eth2=1.2.2.10
;; [receive_point_reader]
;; name=receive_point_reader
;; enable_stats=true
;; allow_initial_fail=true
;; packet_drop_threshold=65
;; sector_drop_threshold=80
;; accept_discarded_packets=false
;; receive_points/0/name=/dev/shm/xdp
;; receive_points/0/address=${eth1}

;; [selector_recv]
;; rcvbuf=4194304

;; If there are multiple feeds that you specify
;; the * feed will be used as the baseline for any
;; feed specified to reduce repitition
[feeds]
feed/*/channels/a/interface=${eth1}
feed/*/channels/a/types/=Incremental
;;feed/*/channels/a/types/=Retransmission
;;feed/*/channels/a/types/=Snapshot
;;feed/*/channels/b/interface=${eth2}
;;feed/*/channels/b/types/=Incremental
;;feed/*/channels/b/types/=Retransmission
;;feed/*/channels/b/types/=Snapshot

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; uncomment the feed that you want to
;; enable
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; feed/xdp_american_bbo/sessions=
;; feed/xdp_american_imbalances/sessions=
;; feed/xdp_american_integrated/sessions=
;; feed/xdp_american_trades/sessions=

;; feed/xdp_nyse_bbo/sessions=
;; feed/xdp_nyse_imbalances/sessions=
feed/xdp_nyse_integrated/sessions=
;; feed/xdp_nyse_trades/sessions=

;; feed/xdp_arca_bbo/sessions=
;; feed/xdp_arca_imbalances/sessions=
;; feed/xdp_arca_integrated/sessions=
;; feed/xdp_arca_trades/sessions=
;; feed/xdp_arca_book/sessions=

;; feed/xdp_pillar_arca_options_complex_top/sessions=
;; feed/xdp_pillar_arca_options_depth/sessions=
;; feed/xdp_pillar_arca_options_top/sessions=
;; feed/xdp_pillar_arca_options_imbalances/sessions=
;; feed/xdp_pillar_arca_options_summary/sessions=
;; feed/xdp_pillar_arca_options_trades/sessions=

;; feed/xdp_national_bbo/sessions=
;; feed/xdp_national_imbalances/sessions=
;; feed/xdp_national_integrated/sessions=
;; feed/xdp_national_trades/sessions=

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; change the following section to
;; whatever feeds are actually live
;; ie:
;; feed/xdp_nyse_integrated/feed/0 ->
;; feed/xdp_arca_integrated/feed/0
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

[feed/xdp_nyse_integrated/feed/0]
;; license_file  = /path/to/license.lic
out_of_order_packet_buffer_length=50
out_of_order_packet_timeout=500us
max_recovery_requests=100
recovery_mode_flags=None
stats/type=PacketPerf | SessionStatsL1
;;source_id=mlehr123
;;;;;;;;;;;;;;
;; Use these for book building
;;;;;;;;;;;;;;
;; asks_map_rehash_count=1313
;; bids_map_rehash_count=1313
;; product_subscriptions_rehash_count=19991
;; price_node_allocation=67108864
;;;;;;;;;;;;;;
;; Use these for non book building
;;;;;;;;;;;;;;
;; order_id_map_rehash_count=250000
;; order_id_node_allocation=134217728

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;; Retransmission & Snapshot
;;
;;;; NYSE retransmission has a single server for all snapshot & retransmission
;;;; requests for all sessions. There is a single TCP connection to that server,
;;;; which processes all requests, the responses to which are sent over seperate
;;;; multicast channels (one for snapshot, one for retransmission)
;;;; The following will
;;;;   * enable an initial snapshot of the data
;;;;   * then use retransmission to gap fill
;;;;   * then if that fails or timesout then will use Snapshot to recover
;;;; Note that the appropriate 'source_id' value must be specified.
;;recovery_mode_flags=InitialSnapshot | Snapshot | Retransmission
;;
;;;; enable the bpstats for recovery connection information
;;retransmission_request_enable_stats=true
;;
;;;; endpoint that we should connect to
;;retransmission_request_endpoint=127.0.0.1:12356
;;
;;;; The amount of time / number of packets that we should wait to
;;;; declare that we have dropped data and we should initiate a recover.
;;;; comment out the values above
;;
;;out_of_order_packet_buffer_length=500
;;out_of_order_packet_timeout=1ms
;;
;;;; Interface to connect to tcp snapshot request server
;;retransmission_request_interface=0.0.0.0
;;
;;;; Timeout for polling on the snapshot_connection
;;;; if set to 0, then the retransmission thread will spin.
;;;; retransmission_request_timeout=10ms
;;
;;;; Thread affinity for retransmission
;;retransmission_thread_affinity=0
;;
;;;; if we haven't received the snapshot in this amount of time, re-send a
;;request retransmission_request_delay=500us
;;
;;;; How long a gap will be allowed to exist before it is requested
;;;; via retransmission
;;retransmission_delay=500us
;;
;;;; if we haven't received the snapshot in this amount of time, re-send
;;;; a request
;;retransmission_rerequest_delay=1s
;;
;;;; min time limit for re-requesting retransmission.  this is to only
;;;; re-request once upon a burst of drops
;;retransmission_rate_limit=100us
;;
;;;; how many retransmission attempts will be made before giving up
;;max_retransmission_attempts=3
;;
;;;; if NYSE says NotAvailable in the mulitcast channel, how long
;;;; do we wait until sending a subsequent retransmission request.
;;;; This would be to ensure that if they say it isn't available
;;;; that we don't use up our attempts for this drop
;;;; (max_retransmission_attempts)
;;retransmission_attempt_offset=30ms
;;
;;;; the following setting configures the maximum tolerated packet gap that
;;;; retransmission will attempt to recover from. packet losses larger than this
;;;; will cause the feed to fallback to snapshot recovery, or invoke a the
;;;; MissingPackets callback. '0' disables this limit.
;;retransmission_max_loss_size=10000
;;
;;;; configures the maximum request size to be made to the recovery service for
;;;; retransmission. if a packet gap larger than this value is to be requested,
;;;; then it is blocked into multiple requests no greater than this size.
;;retransmission_max_request_size=1000
;;
;;;; End Retransmission & Snapshot
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; not necessary -- will load from ftp site
;; symbol_index_mapping_file="ftp://ftp.nyxdata.com/NYSESymbolMapping/NYSESymbolMapping.xml"
;; series_index_mapping_file="ftp://ftp.nyse.com/ArcaOptionsSymbolMapping/PILLAR_ArcaOptionsSymbolMapping.txt"
